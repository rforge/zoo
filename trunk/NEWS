Recent Changes

  o na.locf.data.frame, na.locf.list

  o na.contiguous.data.frame, na.contiguous.list

Changes in Version 0.9-9

  o regular "zoo" series: objects of class "zooreg" (inheriting from "zoo")
    can be used to store strictly regular series (similar to "ts" objects)
    or series with an underlying regularity (as before but with observations
    omitted). They have a frequency attribute that can be used for conversion
    between "zoo" and "ts". The function is.regular() can be used for 
    checking the regularity of a series.

  o improved merge() method: merge.zoo now accepts non-zoo arguments
    (other than first) if all non-zoo args have the same NROW value
    as the first argument (or are scalar). In that case the non-zoo
    args are given the index of the first series. Scalars are added
    for the full index of the merged series.

  o merge() zoo can now optionally return a "data.frame" that contains
    the numeric columns as "zoo" series and the "zoo" objects created
    from factors converted back to "factor".
    
  o [.zoo allows now indexing using observations from the index scale
    (and not only observation numbers).

  o rapply, rollmean, rollmax, rollmedian to perform rolling analyses

  o extended functionality to plot.zoo type argument

  o when plot.zoo used with one series list(...) can be omitted from 
    various plotting parameter arguments

  o print.zoo documentation fix for R 2.1.0

  o yearmon and yearqtr datetime classes

  o head.ts, tail.ts

  o c.zoo, range.zoo

  o coredata.default, coredata.ts


Changes in Version 0.9-1

  o new generic functions ORDER() and MATCH() (with
    order() and match() as the default) so that zoo()
    can handle  arbitrary index/time classes when
    suitable methods for the generic function c(),
    length(), order(), match() and subsetting [, are
    supplied.

  o improved printing of "zoo" objects and added
    a summary() method.
    
  o extended coercion functionality to and from
    "zoo" objects. "its" objects can be coerced to
    "zoo" and vice versa. "zoo" objects can be 
    coerced to vector, matrix, data.frame or list.
    
  o added functionality to extract/assign to
    the coredata() of a "zoo" object.
    
  o added/improved functionality to extract/assign
    to the window() of a "zoo" object.
    
  o added/improved functionality to extract/assign
    to the index() or time() of a "zoo" object.
    
  o added lag(), diff(), start(), end(), head(),
    tail() methods.

  o improved plot.zoo() by more flexible expansion
    of plotting parameters such as col, lty and pch.

  o added a cbind() method for "zoo" objects (almost
    synonymous with merge())
  
  o NA handling for "zoo" objects via na.omit(),
    na.contiguous(), na.approx() and na.locf().

  o na.locf() generic function with default method (suitable
    for "zoo" objects) which implements Last Observation
    Carried Forward.
  
  o na.approx() generic function with default method (suitable
    for "zoo" objects) which implements elimination of NAs
    by interpolation.
  
  o added mathematical methods: group generic functions
    for "zoo" objects, t(), cumsum(), cumprod(), cummin(),
    and cummax().

  o added model.frame.AsIs and model.frame.zoo to support
    regression based on zoo objects, in particular with lm()
    (but also many other regression functions).

  o Zero length vector zoo objects may have non-zero index vectors 
    intended to be used in merge to extend zoo objects. zoo
    changed to enable the creation of such objects by omitting
    first argument.

  o added a vignette explaining the new features
  


Changes in Version 0.2-0

  o zoo() now has defaults for both arguments x and order.by,
    which mimic the default behaviour of ts().

  o added new aggregate.zoo() method for computing summary
    statistics of "zoo" objects along a coarser index grid.

  o improved merge.zoo() in three directions:
    1. handling of "zoo" objects with zero columns,
    2. naming of columns in the merged "zoo" object
       which behaves more like merge.data.frame();
       a corresponding suffixes argument has also been added,
    3. introced a fill argument which allows to fill gaps
       by another value than NA.
       
  o improved documentation with extended examples

